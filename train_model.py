# -*- coding: utf-8 -*-
"""train_model

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kR_h6MtrbfKUIBt-DRBpL5ukmmbtPGYb
"""

# train_model.py

import pandas as pd
import numpy as np
import re
from pycaret.regression import (
    setup as setup_reg, compare_models, tune_model,
    finalize_model, save_model, evaluate_model
)

# 1. Load dataset
df = pd.read_csv('https://raw.githubusercontent.com/b-ukusi/datasets/main/Ovarian%20Cyst%20Track%20Data.csv')
df.columns = [re.sub(r'[^A-Za-z0-9_]+', '_', c.strip()) for c in df.columns]
df = df.loc[:, ~df.columns.str.contains('^Unnamed')]
df['growth_rate_cm_day'] = df['Cyst_Growth_Rate_cm_month'] / 30

# 2. Drop rows with missing required values
df = df.dropna(subset=[
    'Age', 'Menopause_Status', 'CA_125_Level', 'Cyst_Size_cm',
    'Ultrasound_Features', 'Reported_Symptoms',
    'Recommended_Management', 'Region', 'growth_rate_cm_day'
])

# 3. Clean categorical values
for col in ['Ultrasound_Features','Reported_Symptoms','Region',
            'Recommended_Management','Menopause_Status']:
    df[col] = (df[col].fillna('Unknown').astype(str)
               .str.replace(r'[^A-Za-z0-9_ ]+', '', regex=True)
               .str.replace(' ', '_'))

# 4. Optional: Add category label
df['growth_category'] = pd.cut(df['growth_rate_cm_day'],
    bins=[-np.inf, 0, 0.01, 0.05, np.inf],
    labels=['Shrinking', 'Stable', 'Moderate-growing', 'Fast-growing'])

# 5. Rename columns
df = df.rename(columns={
    'Age': 'age', 'Cyst_Size_cm': 'size', 'CA_125_Level': 'ca125',
    'Recommended_Management': 'management', 'Menopause_Status': 'menopause',
    'Ultrasound_Features': 'ultrasound', 'Reported_Symptoms': 'symptoms',
    'Region': 'region'
})

# 6. Setup PyCaret
reg = setup_reg(
    data=df,
    target='growth_rate_cm_day',
    numeric_features=['age','ca125','size'],
    categorical_features=['menopause','ultrasound','management','symptoms','region'],
    ignore_features=['Patient_ID', 'Cyst_Growth_Rate_cm_month', 'Date_of_Exam', 'growth_category'],
    feature_selection=False,
    remove_multicollinearity=False,
    normalize=True,
    transform_target=True,
    session_id=123,
    fold=5,
    verbose=False
)

# 7. Train and tune
best_model = compare_models(include=['lightgbm', 'catboost', 'rf'], sort='RMSE')
tuned_model = tune_model(best_model, optimize='RMSE')
final_model = finalize_model(tuned_model)

# 8. Save model
save_model(final_model, 'growth_rate_model')